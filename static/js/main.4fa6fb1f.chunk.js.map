{"version":3,"sources":["components/FilterField/FilterField.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactsForm/ContactsForm.jsx","components/Contacts/Contacts.jsx","components/FilterField/FilterField.jsx","App.jsx","index.js","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","ContactsForm","state","name","number","handlerOnChange","e","target","value","setState","hendlerOnSubmit","preventDefault","props","addNewContact","reset","onSubmit","this","className","s","form","inputTitle","inputField","type","pattern","title","required","onChange","addContactBtn","Component","Contacts","contactsArr","deleteContact","length","emptyTitle","contactsList","map","id","contactItem","contactsName","contactsNumber","delBtn","onClick","FilterField","filterTitle","filterInput","App","contacts","filter","contact","v4","item","toLowerCase","includes","alert","prevState","changeFilter","getFilteredContacts","NormalizeFilter","contactId","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","setItem","stringify","filteredContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,uCCA/ED,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,WAAa,iCAAiC,cAAgB,sC,sLCI1JC,E,4MAOJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,gBAAkB,SAACC,GACjB,MAAuBA,EAAEC,OAAlBJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBN,EAAOK,K,EAGzBE,gBAAkB,SAACJ,GACjBA,EAAEK,iBACF,EAAKC,MAAMC,cAAX,eAA8B,EAAKX,QACnC,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAACN,KAAM,GAAIC,OAAQ,M,4CAKnC,WACE,OACE,uBAAMW,SAAUC,KAAKN,gBAAiBO,UAAWC,IAAEC,KAAnD,UACE,wBAAOF,UAAWC,IAAEE,WAApB,kBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,OACLd,MAAOQ,KAAKd,MAAMC,KAClBA,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUV,KAAKX,qBAInB,wBAAOY,UAAWC,IAAEE,WAApB,oBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,MACLd,MAAOQ,KAAKd,MAAME,OAClBD,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUV,KAAKX,qBAInB,wBAAQY,UAAWC,IAAES,cAAeL,KAAK,SAAzC,gC,GAxDmBM,aA8DZ3B,I,gBCpCA4B,EA5BE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAC/B,OACED,EAAYE,OAAS,EAAI,mBAAGf,UAAWC,IAAEe,WAAhB,mCACxB,oBAAIhB,UAAWC,IAAEgB,aAAjB,SACEJ,EAAYK,KAAI,gBAAGhC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQgC,EAAjB,EAAiBA,GAAjB,OACf,qBAAanB,UAAWC,IAAEmB,YAA1B,UACE,oBAAGpB,UAAWC,IAAEoB,aAAhB,cAAgCnC,KADlC,MAC8C,mBAAGc,UAAWC,IAAEqB,eAAhB,SAAiCnC,IAC7E,wBAAQa,UAAWC,IAAEsB,OAAQC,QAAS,kBAAKV,EAAcK,IAAKd,KAAK,SAAnE,sBAFOc,S,iBCQFM,EAbK,SAAC,GAAyB,IAAvBlC,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SAC5B,OACE,wBAAOT,UAAWC,IAAEyB,YAApB,mCACE,uBAAO1B,UAAWC,IAAE0B,YAAatB,KAAK,OAAOd,MAAOA,EAAOkB,SAAUA,QCErEmB,E,4MACJ3C,MAAQ,CACN4C,SAAU,GACVC,OAAQ,I,EAGVlC,cAAgB,YAAuB,IAApBV,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjB4C,EAAU,CACdZ,GAAIa,cACJ9C,KAAMA,EACNC,OAAQA,GAGY,EAAKF,MAAM4C,SAASX,KAAI,SAACe,GAAD,OAC5CA,EAAK/C,KAAKgD,iBAGEC,SAASJ,EAAQ7C,KAAKgD,eAChCE,MAAM,GAAD,OAAIL,EAAQ7C,KAAZ,6BACL,EAAKM,UAAS,SAAC6C,GAAD,MAAgB,CAC5BR,SAAS,CAAEE,GAAH,mBAAeM,EAAUR,gB,EAIzCS,aAAe,SAACjD,GACd,EAAKG,SAAS,CAAEsC,OAAQzC,EAAEC,OAAOC,S,EAGnCgD,oBAAsB,WACpB,IAAMC,EAAkB,EAAKvD,MAAM6C,OAAOI,cAE1C,OAAO,EAAKjD,MAAM4C,SAASC,QAAO,SAACC,GAAD,OAChCA,EAAQ7C,KAAKgD,cAAcC,SAASK,O,EAIxC1B,cAAgB,SAAC2B,GACf,EAAKjD,UAAS,SAAC6C,GAAD,MAAgB,CAC5BR,SAAUQ,EAAUR,SAASC,QAC3B,SAACC,GAAD,OAAaA,EAAQZ,KAAOsB,U,uDAKlC,WACE,IAAMZ,EAAWa,aAAaC,QAAQ,YAEhCC,EAAiBC,KAAKC,MAAMjB,GAC9Be,GACF7C,KAAKP,SAAS,CACZqC,SAAUe,IAIdG,QAAQC,IAAIJ,K,gCAEd,SAAmBK,EAAWZ,GACxBtC,KAAKd,MAAM4C,WAAaQ,EAAUR,WACpCkB,QAAQC,IAAI,eAEZN,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUpD,KAAKd,MAAM4C,c,oBAI/D,WACE,IAAMuB,EAAmBrD,KAAKwC,sBAC9B,OACE,sBAAKvC,UAAWC,IAAEoD,IAAlB,UACE,oBAAIrD,UAAWC,IAAEM,MAAjB,uBACA,cAAC,EAAD,CAAcX,cAAeG,KAAKH,gBAClC,oBAAII,UAAWC,IAAEM,MAAjB,sBACA,cAAC,EAAD,CAAahB,MAAOQ,KAAKd,MAAM6C,OAAQrB,SAAUV,KAAKuC,eACtD,cAAC,EAAD,CACEzB,YAAauC,EACbtC,cAAef,KAAKe,uB,GA1EZH,aAiFHiB,ICpFf0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5E,EAAOC,QAAU,CAAC,YAAc,8BAA8B,aAAe,+BAA+B,eAAiB,iCAAiC,OAAS,yBAAyB,WAAa,+B,kBCA7MD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,sB","file":"static/js/main.4fa6fb1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"FilterField_filterTitle__24yTS\",\"filterInput\":\"FilterField_filterInput__39fSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__yrbVb\",\"inputTitle\":\"ContactsForm_inputTitle__KCSuS\",\"inputField\":\"ContactsForm_inputField__bcmQQ\",\"addContactBtn\":\"ContactsForm_addContactBtn__SQ3c_\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactsForm.module.css'\r\n\r\n\r\nclass ContactsForm extends Component {\r\n\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func.isRequired\r\n  }\r\n\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handlerOnChange = (e) => {\r\n    const {name, value } = e.target\r\n    this.setState({[name]: value})\r\n  }\r\n\r\n  hendlerOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addNewContact({ ...this.state })\r\n    this.reset()\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.hendlerOnSubmit} className={s.form}>\r\n        <label className={s.inputTitle}> Name\r\n          <input className={s.inputField}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handlerOnChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.inputTitle}> Number\r\n          <input className={s.inputField}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handlerOnChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.addContactBtn} type='submit'>Add Contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactsForm;","import s from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contactsArr, deleteContact }) => {\r\n  return (\r\n    contactsArr.length < 1 ? <p className={s.emptyTitle}>Contact list is empty</p> :\r\n     <ul className={s.contactsList}>\r\n      {contactsArr.map(({ name, number, id}) =>\r\n        <li key={id} className={s.contactItem}>\r\n          <p className={s.contactsName}> {name}</p> : <p className={s.contactsNumber}>{number}</p>\r\n          <button className={s.delBtn} onClick={()=> deleteContact(id)} type=\"button\">Delete</button>\r\n        </li>)\r\n      }\r\n      \r\n    </ul>\r\n  )\r\n}\r\n\r\nContacts.propTypes = {\r\n  contactsArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired\r\n      \r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n  \r\n}\r\n\r\nexport default Contacts;","import s from './FilterField.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterField = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.filterTitle}> Find contacts by name\r\n      <input className={s.filterInput} type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n  )\r\n}\r\n\r\nFilterField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FilterField;","import React, { Component } from \"react\";\nimport s from \"./App.module.css\";\nimport { v4 } from \"uuid\";\nimport \"./App.module.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport Contacts from \"./components/Contacts\";\nimport FilterField from \"./components/FilterField\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addNewContact = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name: name,\n      number: number,\n    };\n\n    const contactsNames = this.state.contacts.map((item) =>\n      item.name.toLowerCase()\n    );\n\n    contactsNames.includes(contact.name.toLowerCase())\n      ? alert(`${contact.name} is already in contacts.`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const NormalizeFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(NormalizeFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n\n    console.log(parsedContacts);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Update done\");\n\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactsForm addNewContact={this.addNewContact} />\n        <h2 className={s.title}>Contacts</h2>\n        <FilterField value={this.state.filter} onChange={this.changeFilter} />\n        <Contacts\n          contactsArr={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"Contacts_contactItem__1Ett7\",\"contactsName\":\"Contacts_contactsName__vQzdT\",\"contactsNumber\":\"Contacts_contactsNumber__1Fz_g\",\"delBtn\":\"Contacts_delBtn__35OVz\",\"emptyTitle\":\"Contacts_emptyTitle__3dGDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2nXIn\",\"title\":\"App_title__3Am89\"};"],"sourceRoot":""}